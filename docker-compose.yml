services:
  web:
    build:
      context: ./apps/web-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - api

  admin-frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5174"
    ports:
      - "5174:5174"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./apps/admin-frontend:/app
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: ./services/api/Dockerfile
    ports:
      - "8000:8000"
    # This line tells Docker to load the MONGO_URL and JWT_SECRET_KEY from your new file
    env_file:
      - ./services/api/.env
    environment:
      # These variables are now provided by the env_file
      # - MONGO_URL=${MONGO_URL}
      # - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      
      # These are safe defaults
      - MONGO_DB=${MONGO_DB:-learnquest}
      - CHROMA_HOST=${CHROMA_HOST:-chroma}
      - CHROMA_PORT=${CHROMA_PORT:-8000}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
    depends_on:
      - chroma-init
    restart: unless-stopped
    # GPU support for AI proctoring (optional, remove if no GPU)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # --- Judge0 Services (Unchanged) ---
  judge0-db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=judge0
      - POSTGRES_USER=judge0
      - POSTGRES_PASSWORD=judge0
    volumes:
      - judge0_pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  judge0-redis:
    image: redis:7-alpine
    restart: unless-stopped

  judge0:
    image: judge0/judge0:1.13.0
    ports:
      - "2358:2358"
    environment:
      - POSTGRES_DB=judge0
      - POSTGRES_USER=judge0
      - POSTGRES_PASSWORD=judge0
      - POSTGRES_HOST=judge0-db
      - POSTGRES_PORT=5432
      - REDIS_HOST=judge0-redis
      - REDIS_PORT=6379
      - DISABLE_SANDBOX=true
      - ENABLE_WAIT_RESULT=true
      - ENABLE_COMPILER_OPTIONS=true
    depends_on:
      - judge0-db
      - judge0-redis
    restart: unless-stopped
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  judge0-worker:
    image: judge0/judge0:1.13.0
    command: ["./scripts/workers"]
    environment:
      - POSTGRES_DB=judge0
      - POSTGRES_USER=judge0
      - POSTGRES_PASSWORD=judge0
      - POSTGRES_HOST=judge0-db
      - POSTGRES_PORT=5432
      - REDIS_HOST=judge0-redis
      - REDIS_PORT=6379
      - DISABLE_SANDBOX=true
    depends_on:
      - judge0
      - judge0-db
      - judge0-redis
    restart: unless-stopped
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # --- Seeder Service (Updated) ---
  seed:
    image: python:3.10-slim
    # This tells the seeder to also use the MONGO_URL from the .env file
    env_file:
      - ./services/api/.env
    volumes:
      - ./scripts:/app/scripts
      - ./services/api/src:/app/services/api/src
    working_dir: /app
    command: >
      sh -c "pip install pymongo passlib[bcrypt] python-jose[cryptography] && python /app/scripts/seed_db.py"
    depends_on:
      - db
    restart: "no"

  # --- Local DB Service ---
  db:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  # --- Chroma Service (Unchanged) ---
  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    restart: unless-stopped

  chroma-init:
    image: python:3.10-slim
    volumes:
      - ./scripts:/app/scripts
    working_dir: /app
    command: >
      sh -c "sleep 30 && pip install chromadb && python /app/scripts/init_chroma.py"
    depends_on:
      - chroma
    restart: "no"

volumes:
  mongo_data:
  judge0_pg_data:
  chroma_data:

networks:
  default:
    name: learnquest-network